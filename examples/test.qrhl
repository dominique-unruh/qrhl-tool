isabelle.

quantum   var x : int.
quantum var y : int.


lemma (0 :: int ell2 ⇒⇩C⇩L int ell2) = undefined.
rule refl[OF xxx].
admit.
qed.

lemma id_cblinfun >> ⟦x⟧ = id_cblinfun.

⊗⇩S⊗⇩S

lemma ket (0::bit) ⊗⇩s ket (0::bit) = ket (0,0).
simp.
qed.

lemma id_cblinfun ⊗⇩o id_cblinfun = id_cblinfun.
simp.
qed.

lemma ⟦x⟧ ∈⇩q top = top.
simp.
qed.

lemma ⟦x⟧ =⇩q ket 0 = top.
admit.
qed.




program a := { x <q undefined; y <q undefined; }.

ambient var lemma : complex.


qrhl {top} call a; ~ call a; {top}.
equal.
 simp!.
skip.
simp!.
qed.

qrhl {top} call a; ~ call a; {Qeq[x1=x2]}.
admit.

