isabelle.

quantum var a : int.
classical var b : string.
classical var c : nat.

adversary A
  free a, b, c
  calls ?.

transform unrolled A.

# WARNING: Possibly unsound (not proven) command 'derive unrolled' invoked.
# Declared transformed adversary A_unrolled with additional variables store_A, qstore_A.
# Use "print A_unrolled.", "print store_A.", and "print qstore_A." to inspect the details.

print A_unrolled.

# adversary A_unrolled
#
# Variable use of program A_unrolled:
#  Free        ⊆ store_A, qstore_A, a, b, c
#  Ambient     ⊆ ∅
#  Programs    = ∅
#  Written     ⊆ store_A, qstore_A, a, b, c
#  Overwritten ⊇ ∅
#  Inner       ⊆ ∅
#  Covered     ⊇ all variables
#  Oracles     ⊆ ∅

print store_A.

# classical var store_A : bool × char list × nat

print qstore_A.

# quantum var qstore_A : int
