# Autogenerated from template.yml. Changes will be lost.

version: 2.1

orbs:
  windows: circleci/windows@2.4.0

workflows:
  version: 2
  linux:
    jobs:
      - test:
          filters:
            branches:
              only:
                - master
                - isabelle2020

jobs:
  test:

    machine: {image: ubuntu-2004:202010-01}

#    environment:
#      # Customize the JVM maximum heap limit
#      JVM_OPTS: -Xmx3200m
#      TERM: dumb

    steps:
      - checkout
      - run:
          name: "Pull Submodules"
          command: |
            git submodule update --init --recursive


      # Download and cache Isabelle
      - restore_cache:
          keys:
            - v2-isabelle-2020-linux
      - run:
          name: Downloading Isabelle 2020 (if needed)
          shell: bash
          command: |
            if ! [ -e "$HOME/install/Isabelle2020" ]; then
              mkdir -p ~/install
              case linux in
                windows)
                  curl "https://isabelle.in.tum.de/website-Isabelle2020/dist/Isabelle2020.exe" -o /tmp/isabelle.exe
                  7z x -y -o"$HOME/install" /tmp/isabelle.exe;;
                linux)
                  curl https://isabelle.in.tum.de/website-Isabelle2020/dist/Isabelle2020_linux.tar.gz | tar -x -z -C ~/install;;
                *) false;;
              esac
            fi
      - save_cache:
          paths:
            - ~/install/Isabelle2020
          key: v2-isabelle-2020-linux

      # Download and cache AFP
      - restore_cache:
          keys:
            - v2-afp-2020
      - run:
          name: Downloading AFP 2020
          shell: bash
          command: |
            if ! [ -e ~/install/afp-2020 ]; then
              mkdir -p ~/install/afp-2020
              case 2020 in
                2019) curl https://master.dl.sourceforge.net/project/afp/afp-Isabelle2019/afp-2019-08-19.tar.gz | tar -x -z -C ~/install/afp-2019 --strip 1;;
                2020) curl https://www.isa-afp.org/release/afp-current.tar.gz | tar -x -z -C ~/install/afp-2020 --strip 1;;
                *) false;;
              esac
            fi
      - save_cache:
          paths:
            - ~/install/afp-2020
          key: v2-afp-2020

#      - restore_cache:
#          keys:
#            - v1-isabelle-heaps-2020-linux-Analysis
#            - v1-isabelle-heaps-2020-linux-
#      - run:
#          name: Building HOL-Analysis
#          shell: bash
#          command: |
#            if ! compgen -G ~/".isabelle/Isabelle2020/heaps/*/HOL-Analysis"; then
#              ~/install/Isabelle2020/bin/isabelle build -v -b -d ~/install/afp-2020/thys HOL-Analysis
#            fi
#      - save_cache:
#          paths:
#            - ~/.isabelle
#          key: v1-isabelle-heaps-2020-linux-Analysis


#      - restore_cache:
#          keys:
#            - v1-isabelle-heaps-2020-linux-Prerequisites-{{ checksum "isabelle-thys/ROOT" }}-{{ checksum isabelle-thys/Tensor_Product/Bounded_Operators/ROOT }}
#            - v1-isabelle-heaps-2020-linux-Prerequisites-
#      - run:
#          name: Building QRHL Prerequisites
#          shell: bash
#          command: |
#            if ! sha1sum -c ~/qrhl-prerequisites-sha1sum; then
#              ~/install/Isabelle2020/bin/isabelle build -v -b -d ~/install/afp-2020/thys -d . QRHL-Prerequisites
#            fi
#            find -name 'ROOT*' | xargs sha1sum > ~/qrhl-prerequisites-sha1sum
#            cat ~/qrhl-prerequisites-sha1sum
#      - save_cache:
#          paths:
#            - ~/.isabelle
#            - ~/qrhl-prerequisites-sha1sum
#          key: v1-isabelle-heaps-2020-linux-Prerequisites-{{ checksum "isabelle-thys/ROOT" }}-{{ checksum "isabelle-thys/Tensor_Product/Bounded_Operators/ROOT" }}

      # Build QRHL theory
      - run:
          name: Getting checksums of Isabelle theories
          shell: bash
          command: |
            find isabelle-thys -type f | xargs sha1sum ROOTS > ~/isabelle-thys-checksums
            echo v3 > ~/isabelle-thys-checksums # Adding a tag to be able to enforce rebuilding
      - restore_cache:
          keys:
            - v3-isabelle-heaps-2020-linux-QRHL-{{ checksum "~/isabelle-thys-checksums" }}
            - v3-isabelle-heaps-2020-linux-QRHL-
            - v1-isabelle-heaps-2020-linux-QRHL-
      - run:
          name: Building QRHL theories
          shell: bash
          command: |
            ls -lhR ~/.isabelle/*/heaps # TODO remove
            if ! sha1sum -c ~/qrhl-sha1sum; then
              ~/install/Isabelle2020/bin/isabelle build -v -b -d ~/install/afp-2020/thys -d . QRHL
            fi
            ls -lhR ~/.isabelle/*/heaps # TODO remove
            sha1sum ~/isabelle-thys-checksums > ~/qrhl-sha1sum
            cat ~/qrhl-sha1sum
      - save_cache:
          paths:
            - ~/.isabelle
            - ~/qrhl-sha1sum
          key: v3-isabelle-heaps-2020-linux-QRHL-{{ checksum "~/isabelle-thys-checksums" }}

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-linux-{{ checksum "build.sbt" }}
            - v1-dependencies-linux-
      - run:
          name: Downloading build dependencies (if needed)

          shell: bash
          command: |
            if ! sha1sum -c ~/dependencies-sha1sum; then
              mkdir -p ~/install
              curl -Ls https://git.io/sbt > ~/install/sbt
              chmod +x ~/install/sbt
              ~/install/sbt update test/update </dev/null
            fi
            sha1sum build.sbt > ~/dependencies-sha1sum
      - save_cache:
          paths:
            - ~/install/sbt
            - ~/.m2
            - ~/.sbt
            - ~/.ivy2
            - $LOCALAPPDATA\Coursier\Cache
            - ~/.cache/coursier
            - ~/dependencies-sha1sum
          key: v1-dependencies-linux-{{ checksum "build.sbt" }}

      - run:
          name: Running tests
          shell: bash
          command: |
            echo "isabelle-home = $HOME/install/Isabelle2020" > qrhl-tool.conf
            echo "afp-root = $HOME/install/afp-2020" >> qrhl-tool.conf

            ~/install/sbt "testOnly -- -u scalatest-reports" </dev/null

      - store_test_results:
          path: scalatest-reports
