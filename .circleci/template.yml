version: 2.1

orbs:
  windows: circleci/windows@2.4.0

workflows:
  version: 2
  @{name}:
    jobs:
      - test:
          filters:
            branches:
              only:
                - master
                - tmp

jobs:
  test:

    @{machine_config}

    steps:
      - checkout
      - run:
          name: "Pull Submodules"
          command: |
            git submodule update --init --recursive --depth 1

      # Download and cache Isabelle
      - restore_cache:
          keys:
            - v3-isabelle-@{isabelle}-@{os}
      - run:
          name: Downloading Isabelle @{isabelle} (if needed)
          shell: bash
          command: |
            if ! [ -e @{isabellehome} ]; then
              mkdir -p ~/install
              case @{os} in
                windows)
                  curl "https://isabelle.in.tum.de/website-Isabelle@{isabelle}/dist/Isabelle@{isabelle}.exe" -o /tmp/isabelle.exe
                  7z x -y -o"$HOME/install" /tmp/isabelle.exe;;
                linux|macos)
                  curl https://isabelle.in.tum.de/website-Isabelle@{isabelle}/dist/Isabelle@{isabelle}_@{os}.tar.gz | tar -x -z -C ~/install;;
                *) false;;
              esac
            fi
      - save_cache:
          paths:
            - @{isabellehome}
          key: v3-isabelle-@{isabelle}-@{os}

      # Download and cache AFP
      - restore_cache:
          keys:
            - v1-afp-@{isabelle}-@{os}
      - run:
          name: Downloading AFP @{isabelle}
          shell: bash
          command: |
            if ! [ -e ~/install/afp-@{isabelle} ]; then
              mkdir -p ~/install/afp-@{isabelle}
              case @{isabelle} in
                2019)
                  curl https://master.dl.sourceforge.net/project/afp/afp-Isabelle2019/afp-2019-08-19.tar.gz -o /tmp/afp.tar.gz
                  tar -x -z -f /tmp/afp.tar.gz -C ~/install/afp-2019 --strip 1;;
                *) false;;
              esac
            fi
      - save_cache:
          paths:
            - ~/install/afp-@{isabelle}
          key: v1-afp-@{isabelle}-@{os}

      # Build QRHL theory
      - run:
          name: Getting checksums of Isabelle theories
          shell: bash
          command: |
            find isabelle-thys -type f | xargs sha1sum ROOTS > ~/isabelle-thys-checksums
            echo v5 > ~/isabelle-thys-checksums # Adding a tag to be able to enforce rebuilding
      - restore_cache:
          keys:
            - v5-isabelle-heaps-@{isabelle}-@{os}-QRHL-{{ checksum "~/isabelle-thys-checksums" }}
            - v5-isabelle-heaps-@{isabelle}-@{os}-QRHL-
            - v4-isabelle-heaps-@{isabelle}-@{os}-QRHL-
            - v3-isabelle-heaps-@{isabelle}-@{os}-QRHL-
      - run:
          name: Building QRHL theories
          shell: bash
          command: |
            set -e
            if ! @{sha1sum} -c ~/qrhl-sha1sum; then
              case @{os} in
                windows)
                  # TODO: Under windows, need a different invocation, check whether this works
                  @{isabellehome}/contrib/cygwin/bin/bash @{isabellehome}/bin/isabelle build -o threads=4 -v -b -d ~/install/afp-@{isabelle}/thys -d . QRHL;;
                *)
                  @{isabellehome}/bin/isabelle build -o threads=8 -v -b -d ~/install/afp-@{isabelle}/thys -d . QRHL;;
              esac
            fi
            @{sha1sum} ~/isabelle-thys-checksums > ~/qrhl-sha1sum
            cat ~/qrhl-sha1sum
      - save_cache:
          paths:
            - ~/.isabelle
            - ~/qrhl-sha1sum
          key: v5-isabelle-heaps-@{isabelle}-@{os}-QRHL-{{ checksum "~/isabelle-thys-checksums" }}

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-@{os}-{{ checksum "build.sbt" }}
            - v1-dependencies-@{os}-
      - run:
          name: Downloading build dependencies (if needed)

          shell: bash
          command: |
            if ! @{sha1sum} -c ~/dependencies-sha1sum; then
              mkdir -p ~/install
              curl -Ls https://git.io/sbt > ~/install/sbt
              chmod +x ~/install/sbt
              ~/install/sbt update test/update </dev/null
            fi
            @{sha1sum} build.sbt > ~/dependencies-sha1sum
      - save_cache:
          paths:
            - ~/install/sbt
            - ~/.m2
            - ~/.sbt
            - ~/.ivy2
            - $LOCALAPPDATA\Coursier\Cache
            - ~/.cache/coursier
            - ~/dependencies-sha1sum
          key: v1-dependencies-@{os}-{{ checksum "build.sbt" }}

      - run:
          name: Setting up Java
          shell: bash
          command: |
            case @{os} in
              linux)
                if [ @{jdk} != 11 ]; then
                  sudo apt install --yes openjdk-@{jdk}-jdk
                  sudo update-alternatives --set java /usr/lib/jvm/java-@{jdk}-openjdk-amd64/bin/java
                fi;;
              macos)
                if [ @{jdk} != 11 ]; then
                  brew cask install adoptopenjdk@{jdk}
                fi;;
            esac

            # Check if we have the right Java version
            java -version
            java -version 2>&1 | grep 'version "@{jdkversionprefix}\b' -q

      - run:
          name: Running tests
          shell: bash
          command: |
            case @{os} in
              windows)
                # Isabelle process calls rebaseall and then fails, unless we deactivate it
                > @{isabellehome}/contrib/cygwin/isabelle/rebaseall
                ISABELLE_HOME="`cygpath -w @{isabellehome}`";;
              linux|macos)
                ISABELLE_HOME=@{isabellehome};;
            esac

            echo "isabelle-home = $ISABELLE_HOME" > qrhl-tool.conf
            echo "afp-root = $HOME/install/afp-@{isabelle}" >> qrhl-tool.conf

            ~/install/sbt "testOnly -- -u scalatest-reports" </dev/null

      - store_test_results:
          path: scalatest-reports
